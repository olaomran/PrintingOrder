@model PrintingOrder.ViewModels.SchoolPrintOrderCreateVM

<h2>إنشاء أمر طباعة كتاب مدرسي</h2>

<form asp-action="CreateSchool" method="post" id="orderForm">
    <div class="form-group">
        <label asp-for="OrderNumber"></label>
        <input asp-for="OrderNumber" class="form-control" />
    </div>

    <div class="form-group">
        <label asp-for="Date"></label>
        <input asp-for="Date" type="date" class="form-control" />
    </div>

    <div class="form-group">
        <label asp-for="PrintName"></label>
        <input asp-for="PrintName" class="form-control" />
    </div>

    <div class="form-group">
        <label asp-for="ContractNumber"></label>
        <input asp-for="ContractNumber" class="form-control" />
    </div>

    <div class="form-group">
        <label asp-for="CopiesCount"></label>
        <input asp-for="CopiesCount" class="form-control" id="CopiesCount" />
    </div>

    <div class="form-group">
        <label asp-for="PagesCount"></label>
        <input asp-for="PagesCount" class="form-control" id="PagesCount" />
    </div>

    <div class="form-group">
        <label asp-for="ManualSignatureCount">عدد الملازم للمطبوعة (يمكن التعديل)</label>
        <input asp-for="ManualSignatureCount" class="form-control" id="ManualSignatureCount" />
    </div>

    <div class="form-group">
        <label asp-for="PrintSizeId">قياس النموذج</label>
        <select asp-for="PrintSizeId" asp-items="@(new SelectList(ViewBag.PrintSizes, "Id", "Name"))" class="form-control"></select>
    </div>

    <h4>الملخص:</h4>
    <p>عدد الملازم للمطبوعة: <span id="sigCount">-</span></p>
    <p>عدد الملازم الكلي: <span id="totalSig">-</span></p>
    <p>عدد الكبسات الكلي: <span id="totalPress">-</span></p>

    <h4>جدول الملازم المطلوبة:</h4>
    <table class="table table-bordered" id="signaturesTable">
        <thead>
            <tr>
                <th>رقم الملزمة</th>
                <th>ملزمة كاملة</th>
                <th>جزء الملزمة</th>
                <th>الكمية المطلوبة</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>

    <h4>جدول كميات المواد المطلوبة:</h4>
    <div class="row">
        <div class="col-md-3">
            <label>المستودع</label>
            <select id="StoreId" class="form-control" asp-items="ViewBag.Stores">
                <option value="">-- اختر مستودع --</option>
            </select>
        </div>
        <div class="col-md-3">
            <label>القسم</label>
            <select id="CategoryId" class="form-control">
                <option value="">-- اختر قسم --</option>
            </select>
        </div>
        <div class="col-md-3">
            <label>المادة</label>
            <select id="ItemId" class="form-control">
                <option value="">-- اختر مادة --</option>
            </select>
        </div>
        <div class="col-md-2">
            <label>الكمية</label>
            <input id="ItemQuantity" type="number" class="form-control" />
        </div>
        <div class="col-md-1 d-flex align-items-end">
            <button type="button" id="btnAddItem" class="btn btn-success">إضافة</button>
        </div>
    </div>

    <hr />

    <table class="table table-bordered" id="itemsTable">
        <thead>
            <tr>
                <th>المادة</th>
                <th>الكمية</th>
                <th>إجراءات</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>


    <button type="submit" class="btn btn-primary">حفظ</button>
</form>

@section Scripts {
    <script>
        function recalc() {
            const data = {
                CopiesCount: parseInt(document.getElementById("CopiesCount").value) || 0,
                PagesCount: parseInt(document.getElementById("PagesCount").value) || 0,
                ManualSignatureCount: parseFloat(document.getElementById("ManualSignatureCount").value) || null
            };

            fetch('@Url.Action("CalculateSignatures", "PrintOrders")', {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(data)
            })
            .then(r => r.json())
            .then(res => {
                if (!res.success) return;

                // تحديث الملخص
                document.getElementById("sigCount").innerText = res.signatureCount;
                document.getElementById("totalSig").innerText = res.totalSignatures;
                document.getElementById("totalPress").innerText = res.totalPress;

                // تحديث الجدول
                const tbody = document.querySelector("#signaturesTable tbody");
                tbody.innerHTML = "";
                res.signatures.forEach(sig => {
                    const row = `<tr>
                        <td>${sig.signatureOrder}</td>
                        <td>${sig.wholeSignature ? "نعم" : "لا"}</td>
                        <td>${sig.signaturePart}</td>
                        <td>${sig.requiredQuantity}</td>
                    </tr>`;
                    tbody.innerHTML += row;
                });
            });
        }

        document.getElementById("CopiesCount").addEventListener("input", recalc);
        document.getElementById("PagesCount").addEventListener("input", recalc);
        document.getElementById("ManualSignatureCount").addEventListener("input", recalc);



        let items = [];

        // تحميل الأقسام عند اختيار مستودع
        $("#StoreId").change(function () {
            alert("ddddddddddddddd");
            let storeId = $(this).val();
            $("#CategoryId").empty().append('<option value="">-- اختر قسم --</option>');
            $("#ItemId").empty().append('<option value="">-- اختر مادة --</option>');
            alert(StoreId);
            if (storeId) {
                $.getJSON(`/PrintOrders/GetCategoriesByStore?storeId=${storeId}`, function (data) {
                    $.each(data, function (i, category) {
                        $("#CategoryId").append(`<option value="${category.id}">${category.name}</option>`);
                    });
                });
            }
        });

        // تحميل المواد عند اختيار قسم
        $("#CategoryId").change(function () {
            let categoryId = $(this).val();
            $("#ItemId").empty().append('<option value="">-- اختر مادة --</option>');

            if (categoryId) {
                $.getJSON(`/PrintOrders/GetItemsByCategory?categoryId=${categoryId}`, function (data) {
                    $.each(data, function (i, item) {
                        $("#ItemId").append(`<option value="${item.id}">${item.name}</option>`);
                    });
                });
            }
        });

        // إضافة مادة للجدول
        $("#btnAddItem").click(function() {
            let itemId = $("#ItemId").val();
            let itemName = $("#ItemId option:selected").text();
            let qty = $("#ItemQuantity").val();

            if (!itemId || !qty) {
                alert("اختر مادة وأدخل الكمية");
                return;
            }

            items.push({ itemId: itemId, itemName: itemName, requiredAmount: qty });
            renderItemsTable();
        });

        function renderItemsTable() {
            let rows = "";
            items.forEach((it, index) => {
                rows += `<tr>
                    <td>${it.itemName}</td>
                    <td>${it.requiredAmount}</td>
                    <td><button type="button" onclick="removeItem(${index})" class="btn btn-danger btn-sm">حذف</button></td>
                </tr>`;
            });
            $("#itemsTable tbody").html(rows);
        }

        function removeItem(index) {
            items.splice(index, 1);
            renderItemsTable();
        }

        // عند الحفظ نضيف المواد كـ JSON
        $("form").submit(function () {
            $("<input>").attr({
                type: "hidden",
                name: "RequiredItemsJson",
                value: JSON.stringify(items)
            }).appendTo("form");
            return true;
        });



    </script>
}
